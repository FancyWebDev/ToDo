{"version":3,"sources":["components/header.js","components/search-item.js","components/todo-list-items.js","components/todo-list.js","components/item-status-filter.js","components/add-list-tem.js","components/app.js","index.js"],"names":["Header","toDo","done","className","Search","state","word","onSearchChange","event","target","value","trim","setState","props","placeholder","this","onChange","Component","ListItem","label","id","onDelete","important","onToggleDone","onToggleImportant","classNames","onClick","type","List","todos","onDeleted","liElems","map","item","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","AddInput","onLabelChange","targetVal","onSubmit","preventDefault","onItemAdded","App","newId","todoData","createElement","toggleProperty","deleteItem","index","findIndex","el","slice","addItem","newItem","document","querySelector","style","background","dataArr","prop","oldItem","length","checkSize","items","toLowerCase","includes","doneCount","toDoCount","visibleItems","search","root","ReactDom","render"],"mappings":"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","file":"static/js/main.b20c7935.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>ToDo List</h1>\r\n            <small>{ toDo } active, { done } done</small>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        word: ''\r\n    };\r\n\r\n    onSearchChange = (event) => {\r\n        const word = event.target.value.trim();\r\n        this.setState({ word });\r\n        this.props.onSearchChange(word);\r\n    }\r\n\r\n    render() {\r\n        return <input className=\"search\" \r\n                placeholder=\"type to search\"\r\n                value={ this.state.word }\r\n                onChange={ this.onSearchChange }/>\r\n    }\r\n};\r\n","import { React, Component } from 'react';\r\n\r\nexport default class ListItem extends Component {\r\n\r\n    render() {\r\n        const { label, id, onDelete, done, important, onToggleDone, onToggleImportant } = this.props;\r\n\r\n        let classNames = 'todo-list-item-label';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <div className='todo-list-item'>\r\n                <span className={ classNames } \r\n                    id={ id }\r\n                    onClick={ onToggleDone }>\r\n                    { label }\r\n                </span>\r\n                <span className='d-flex flex-row-reverse'>\r\n                    <button type='button'\r\n                        className='btn btn-outline-success btn-sm'\r\n                        onClick={ onToggleImportant }>\r\n                        <i className='fa fa-exclamation'></i>\r\n                    </button>\r\n                    <button type='button' \r\n                        className='btn btn-outline-danger btn-sm'\r\n                        onClick={ onDelete }>\r\n                        <i className='fa fa-trash-o'></i>\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ListItem from './todo-list-items';\r\n\r\n\r\nconst List = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n    const liElems = todos.map((item) => {\r\n        const { id, ...itemProps} = item;\r\n        return (\r\n            <li className=\"list-group-item\" key={ id }>\r\n                <ListItem { ...itemProps }\r\n                    onDelete={ () => onDeleted(id) }\r\n                    onToggleDone ={ () => onToggleDone(id) }\r\n                    onToggleImportant ={ () => onToggleImportant(id) }/>\r\n            </li>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            { liElems }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default List;","import { React, Component } from 'react';\r\n\r\nexport default class ItemStatusFilter extends Component { \r\n    \r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n    \r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props; \r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const isActive = filter === name;\r\n            const classNames = isActive ? 'btn btn-info' : 'btn btn-outline-secondary';\r\n            return <button className={ classNames } \r\n                    key={ name }\r\n                    onClick={ () => onFilterChange(name) }>\r\n                    { label }\r\n                    </button>\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                { buttons }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class AddInput extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (event) => {\r\n        const targetVal = event.target.value.trim();\r\n        this.setState({\r\n            label: targetVal\r\n        });\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <form className=\"itme-add-form input-group\"\r\n                onSubmit={ this.onSubmit }>\r\n                <input type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"New task\"\r\n                    onChange={ this.onLabelChange }\r\n                    value={this.state.label}/>\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-outline-secondary\" \r\n                        type=\"button\" \r\n                        id=\"button-addon2\"\r\n                        onClick={ this.onSubmit }>\r\n                        Add Item\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import { React, Component }from 'react';\r\nimport \"./style.css\";\r\nimport Header from './header';\r\nimport Search from './search-item';\r\nimport List from './todo-list';\r\nimport ItemStatusFilter from './item-status-filter';\r\nimport AddInput from './add-list-tem';\r\n\r\nexport default class App extends Component {\r\n    newId = 100; \r\n\r\n    state = {\r\n        todoData: [\r\n            this.createElement('Drink Cofee'),\r\n            this.createElement('Build ToDo app'),\r\n            this.createElement('Have a lunch')\r\n        ],\r\n        word: '',\r\n        filter: 'all'\r\n    };   \r\n\r\n    toggleProperty(dataArr, id, prop) {\r\n        const index = dataArr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = dataArr[index];\r\n        const newItem = {...oldItem, [prop]: !oldItem[prop]};\r\n        return [\r\n            ...dataArr.slice(0, index),\r\n            newItem,\r\n            ...dataArr.slice(index+1)\r\n        ];\r\n    }\r\n\r\n    checkSize(label) {\r\n        return label = label.length >= 35 ? label.slice(0, 35) + ' ...' : label;\r\n    }\r\n\r\n    onToggleImportant = (id) => { \r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    }\r\n\r\n    createElement(label) {\r\n        return {\r\n            label: this.checkSize(label),\r\n            important: false,\r\n            done: false,\r\n            id: this.newId++\r\n        };\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const index = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [...todoData.slice(0, index), ...todoData.slice(index+1)];\r\n            \r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem = (label) => {\r\n        if (label) {\r\n            const newItem = this.createElement(label);\r\n\r\n            this.setState(({ todoData }) => {\r\n                \r\n                const newArray = [...todoData, newItem];\r\n\r\n                return {\r\n                    todoData: newArray\r\n                };\r\n            });\r\n            document.querySelector('.form-control').style.background = '';\r\n        } else {\r\n            document.querySelector('.form-control').style.background = 'rgba(207, 0, 15, 0.3)';\r\n        }\r\n    }\r\n\r\n    search(items, word) {\r\n        if (word.length === 0)\r\n            return items;\r\n        \r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().includes(word.toLowerCase());\r\n        });\r\n    }\r\n\r\n    onSearchChange = (word) => {\r\n        this.setState(({ word }))\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n                break;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n                break;\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n                break;\r\n        }\r\n    } \r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, word, filter } = this.state;\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const toDoCount = todoData.length - doneCount;\r\n        const visibleItems = this.filter(this.search(todoData, word), filter);\r\n\r\n        return (\r\n            <div className=\"container\"> \r\n                <Header toDo={toDoCount} done={doneCount}/>\r\n                <div className=\"searchNstatus\">\r\n                    <Search onSearchChange={ this.onSearchChange }/>\r\n                    <ItemStatusFilter filter={ filter }\r\n                        onFilterChange={ this.onFilterChange }/>\r\n                </div>\r\n                <List todos={ visibleItems }\r\n                onDeleted={ (id) => this.deleteItem(id) }\r\n                onToggleDone={ this.onToggleDone }\r\n                onToggleImportant={ this.onToggleImportant }/>\r\n                <AddInput \r\n                    onItemAdded={ this.addItem }/>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app';\n\nconst root = document.querySelector('#root');\n\nReactDom.render(<App/>, root);\n"],"sourceRoot":""}